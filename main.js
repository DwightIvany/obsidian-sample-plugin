/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => ExamplePlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var ExamplePlugin = class extends import_obsidian.Plugin {
  onload() {
    this.statusBarElement = this.addStatusBarItem().createEl("span");
    this.readActiveFileAndUpdateLineCount();
    this.app.workspace.on("editor-change", (editor) => {
      const content = editor.getDoc().getValue();
      this.updateLineCount(content);
    });
    this.app.workspace.on("active-leaf-change", () => {
      this.readActiveFileAndUpdateLineCount();
    });
  }
  onunload() {
    this.statusBarElement.remove();
  }
  async readActiveFileAndUpdateLineCount() {
    const file = this.app.workspace.getActiveFile();
    if (file) {
      const content = await this.app.vault.read(file);
      this.updateLineCount(content);
    } else {
      this.updateLineCount(void 0);
    }
  }
  updateLineCount(fileContent) {
    const count = fileContent ? fileContent.split(/\r\n|\r|\n/).length : 0;
    const linesWord = count === 1 ? "line" : "hello lines";
    this.statusBarElement.textContent = `${count} ${linesWord}`;
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLy8gc2NyaXB0IGNvdW50cyBsaW5lcyBhbmQgc2F5cyBoZWxsbyBpbiB0aGUgc3RhdHVzIGJhclxuXG5pbXBvcnQgeyBQbHVnaW4gfSBmcm9tIFwib2JzaWRpYW5cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXhhbXBsZVBsdWdpbiBleHRlbmRzIFBsdWdpbiB7XG5cdHN0YXR1c0JhckVsZW1lbnQ6IEhUTUxTcGFuRWxlbWVudDtcblxuXHRvbmxvYWQoKSB7XG5cdFx0dGhpcy5zdGF0dXNCYXJFbGVtZW50ID0gdGhpcy5hZGRTdGF0dXNCYXJJdGVtKCkuY3JlYXRlRWwoXCJzcGFuXCIpO1xuXHRcdC8vIHRoaXMuc3RhdHVzQmFyRWxlbWVudC50ZXh0Q29udGVudCA9IFwiaGVsbG9cIjtcblxuXHRcdHRoaXMucmVhZEFjdGl2ZUZpbGVBbmRVcGRhdGVMaW5lQ291bnQoKTtcblxuXHRcdHRoaXMuYXBwLndvcmtzcGFjZS5vbihcImVkaXRvci1jaGFuZ2VcIiwgKGVkaXRvcikgPT4ge1xuXHRcdFx0Y29uc3QgY29udGVudCA9IGVkaXRvci5nZXREb2MoKS5nZXRWYWx1ZSgpO1xuXHRcdFx0dGhpcy51cGRhdGVMaW5lQ291bnQoY29udGVudCk7XG5cdFx0fSk7XG5cblx0XHR0aGlzLmFwcC53b3Jrc3BhY2Uub24oXCJhY3RpdmUtbGVhZi1jaGFuZ2VcIiwgKCkgPT4ge1xuXHRcdFx0dGhpcy5yZWFkQWN0aXZlRmlsZUFuZFVwZGF0ZUxpbmVDb3VudCgpO1xuXHRcdH0pO1xuXHR9XG5cblx0b251bmxvYWQoKSB7XG5cdFx0dGhpcy5zdGF0dXNCYXJFbGVtZW50LnJlbW92ZSgpO1xuXHR9XG5cblx0cHJpdmF0ZSBhc3luYyByZWFkQWN0aXZlRmlsZUFuZFVwZGF0ZUxpbmVDb3VudCgpIHtcblx0XHRjb25zdCBmaWxlID0gdGhpcy5hcHAud29ya3NwYWNlLmdldEFjdGl2ZUZpbGUoKTtcblx0XHRpZiAoZmlsZSkge1xuXHRcdFx0Y29uc3QgY29udGVudCA9IGF3YWl0IHRoaXMuYXBwLnZhdWx0LnJlYWQoZmlsZSk7XG5cdFx0XHR0aGlzLnVwZGF0ZUxpbmVDb3VudChjb250ZW50KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy51cGRhdGVMaW5lQ291bnQodW5kZWZpbmVkKTtcblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIHVwZGF0ZUxpbmVDb3VudChmaWxlQ29udGVudD86IHN0cmluZykge1xuXHRcdGNvbnN0IGNvdW50ID0gZmlsZUNvbnRlbnQgPyBmaWxlQ29udGVudC5zcGxpdCgvXFxyXFxufFxccnxcXG4vKS5sZW5ndGggOiAwO1xuXHRcdGNvbnN0IGxpbmVzV29yZCA9IGNvdW50ID09PSAxID8gXCJsaW5lXCIgOiBcImhlbGxvIGxpbmVzXCI7XG5cdFx0dGhpcy5zdGF0dXNCYXJFbGVtZW50LnRleHRDb250ZW50ID0gYCR7Y291bnR9ICR7bGluZXNXb3JkfWA7XG5cdH1cbn1cbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQSxzQkFBdUI7QUFFdkIsSUFBcUIsZ0JBQXJCLGNBQTJDLHVCQUFPO0FBQUEsRUFHakQsU0FBUztBQUNSLFNBQUssbUJBQW1CLEtBQUssaUJBQWlCLEVBQUUsU0FBUyxNQUFNO0FBRy9ELFNBQUssaUNBQWlDO0FBRXRDLFNBQUssSUFBSSxVQUFVLEdBQUcsaUJBQWlCLENBQUMsV0FBVztBQUNsRCxZQUFNLFVBQVUsT0FBTyxPQUFPLEVBQUUsU0FBUztBQUN6QyxXQUFLLGdCQUFnQixPQUFPO0FBQUEsSUFDN0IsQ0FBQztBQUVELFNBQUssSUFBSSxVQUFVLEdBQUcsc0JBQXNCLE1BQU07QUFDakQsV0FBSyxpQ0FBaUM7QUFBQSxJQUN2QyxDQUFDO0FBQUEsRUFDRjtBQUFBLEVBRUEsV0FBVztBQUNWLFNBQUssaUJBQWlCLE9BQU87QUFBQSxFQUM5QjtBQUFBLEVBRUEsTUFBYyxtQ0FBbUM7QUFDaEQsVUFBTSxPQUFPLEtBQUssSUFBSSxVQUFVLGNBQWM7QUFDOUMsUUFBSSxNQUFNO0FBQ1QsWUFBTSxVQUFVLE1BQU0sS0FBSyxJQUFJLE1BQU0sS0FBSyxJQUFJO0FBQzlDLFdBQUssZ0JBQWdCLE9BQU87QUFBQSxJQUM3QixPQUFPO0FBQ04sV0FBSyxnQkFBZ0IsTUFBUztBQUFBLElBQy9CO0FBQUEsRUFDRDtBQUFBLEVBRVEsZ0JBQWdCLGFBQXNCO0FBQzdDLFVBQU0sUUFBUSxjQUFjLFlBQVksTUFBTSxZQUFZLEVBQUUsU0FBUztBQUNyRSxVQUFNLFlBQVksVUFBVSxJQUFJLFNBQVM7QUFDekMsU0FBSyxpQkFBaUIsY0FBYyxHQUFHLFNBQVM7QUFBQSxFQUNqRDtBQUNEOyIsCiAgIm5hbWVzIjogW10KfQo=
